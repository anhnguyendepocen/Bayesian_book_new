(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     16709,        335]
NotebookOptionsPosition[     16387,        319]
NotebookOutlinePosition[     16734,        334]
CellTagsIndexPosition[     16691,        331]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vData", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"2000", ",", "4000"}], "}"}], "]"}], ",", 
     RowBox[{"{", "n", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vMean", "=", 
   RowBox[{
    RowBox[{"Accumulate", "[", "vData", "]"}], "/", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"vMean", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"2500", ",", "3500"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "3000"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "3000"}], "}"}]}], "}"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "16"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<cars bought \>\"", ",", "\"\<running mean value $ \>\""}],
        "}"}]}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.630260935973588*^9, 3.630261005838584*^9}, {
  3.6302615172648363`*^9, 3.630261889101104*^9}, {3.630262205293189*^9, 
  3.6302622212150993`*^9}, {3.6302628141130114`*^9, 3.63026285256021*^9}, {
  3.6389656245421524`*^9, 3.6389657283900924`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0.5], PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1: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
yR7I8bj36Ye72P5PjoCvTjv3U//gyjFq5cCGEWz/J8fqfgv6sN+TeXJoLhnI
eU/y3nKIoy7PsmW/N8sRfc/Km8vqX44tR1odJrD6l+O4U7mVA8nL5djv6zJd
QvrT5HC/JRl6g+ohU47BM+pDWL1ky1E12qjsLdmXL0fv092jJ7Hfq+S4r/4x
NIm+jxI5rky4vcmS/X4px+XQs2MeEF/REb81M0302H2eHPlr7H+L2Povh8N8
ld5z4hvk+OWqazedcJMck8K9Dpez9V8ORx/Pk1ok3y7H2Sn2xg/Z/ZcCzRP3
aG9n678Cx68t3DKA3YcpsDv/tJK9TzBQwNJuqakmux9XIDZm5dtY+t5MFBBW
5alS2P5fAY/XitNnaLyFAtln3ley3yuggF1pThnb39sokNtscp1D8eUq4D2k
YcAFln8Fkupl21rY74sK5J0Yt1dE83sroNfkvW8a8XwFpn4dlT6f5V+BhQrl
K/Y+VKhAxPRNh1bT9ypXQKG7u2U76U9T4O7A1KPWND5TgR2v17yOZL/PdMRH
c4mvHY3PVyCnNDAkl/jCjvhWXtNmv7eVKPD1bWko+31UrUCXqJFaUlb/CjzW
GjTSh9W/Ak5npwXasf6vQJOvwYY29vumAj/L1X/zSL5Jgd6i+X1krP4ViAt7
bvOK7f8VsNcX+9Sw/Z8S5Z3Cfumx9V+Jr5YDThUS1lHi1qsjMmafgRKjX4g9
q1n9K6G7Psd1DOv/SkzWuVFjzepfCak4fEEyjbdQYqOo+4EFxEOJgm96ihTC
NkoY2I7udpvlX4k7xxYdW8fWfyVaS3kfWX3zlDja/tv2Ilv/lTCf8OBEHPu9
WQmzPQc/BxAWKLGtpFxTQPMLlUgOXJr3gupdrsSXXpeKtGh8mhKBBkuLJ5K+
TCXiD7261J/VvxLOycHfxxOfrwT3x3nFbZZ/JbS5JYL5hEuUeJdxP1bA+r8S
H0af0Z/G1n8l/j1uZqZN89coYZhpptlGuE6J8xX3Qgex/HfE63Z2yyOWfyX6
2dSOOMbWfyWieo6c85PGtytx/7Kf9my2/0uCrwM/dzFhzSS0LlRNvsbO/0kw
e7QmJoDVfxLy5iw9UcrqPwnX7r6xm8TqPwlTF1n/VLP6T8JZs/zZT1n+kzDL
qvKsO3tfnQQf//3CVpb/JLyKXqQ3lr0nSkK4/p6yNFb/SeC4bRaasvwnITtr
hQWT905CT4cXSxNZ/pMw4pRthSvLfxJm2Lbv/M7yn4QeU+b8Ps3qPwnGvAdb
3Vn/T8I487fmusRnJmGYo9Wmdpb/JPTuaVnRSOPzkyD3Hes7it3/JKHq7x45
c9n5PwlPXjeadmP3Px36a+8/G0j3BRVJcB89Haa03tQkwaaq/LQB3S/UdcS3
r9/g53Qf0ZCE1LKcg5b0e3lTEryNEjZZ0fjWJBwakuvG3uO3J0F8LuBzP/b+
XoXXfw/aZEb3HZoqxJpcOdpGWEeFFasNdrwgeQMVJn6yvVLM3sur0Kf84a5a
ms9EBUmIw2cH9l5ABcHmW30nkbyFCjl3CjqDvR9QIWxxm+coGm+jwjyjrF8n
CHNVyDq6K8uFsLMKvjNL+D9pPp4KvWP7XelBvLcKm+9MDV1E8/NVuP3+J2cj
YYEKlT87Z2nTezihCuN0N3g9ICxXYV9pcqIGe4+gQnnV5EoH4jNVMFTyx+4n
nK1Cz0l9jV4TzlfBP0Cy+iW9byjs8Ofyi3sV9J6sRIWr0Wf2cQirVahr7txn
MI2vUEF7cv6nWuJrVFiZMeBnKL3/quuIV8qUGZo0vkGF6PR98b/pvVlTB35Z
uMaGxreqIC2Z9LOC+HYVdk6N3WdEWCMZ2xLNogfYU/6TsV5qnPc3vUfTScb7
0miHV4QNkmEwLss8gMYbJeObRnLZbXqvZpKM4ilDI74Rz0nGqVGHDjcStkhG
WkHx1LM0HslYUbL18RGyxyYZv00zOfmEucnYWf/AvYqwczJmuoSvY+N5yejr
q5X1mOb3TobgLe/mV8L8ZOiFyR0/kf2CZEwad//IbsLCZMSXy/qGL6f8J+N8
r2USJ5JPS8aTLtrjNpC+zGSsHBv9k/mbnQynMq/NS4nPT8Zi9VsbU8KFHfrT
1z+8y/KfjHM3/Hvlsfwnw/XqQ7GY8lWRjBsbg7+covzWJKN25L2kszS+LhkX
LLZ2OUn6Gzrm0/i+7i+ytykZZoptu7KIb03GfMkOXirh9mSESTbuKSJ/NVKQ
1eXix9PEa6bgSqiRopjs10nBSo/hCez/Pxmk4Fxiqp0/8UYp8Aqd6H6d5T8F
PzWWzB1EPCcFI+e9PrqE7LfoGF+54mJn8g8peN7od8yKsE0KFm+oiB9FmJuC
YKsyc23Czil4l/R7ppLm43XMv3/tvCmEvVPwzNLdjeWDnwKPvzKG/SL7BCmY
+HJfWHeKtzAFT0qPZAwleXkK4h7KV18g+bQUpKJ7mj7JZ6ZgivF5HyHFO7tj
/FG/7lcI56dgYd+cGAPChSlwHZAwpYziXZKC3NFD4oIIq1Mw3cfonwx6H1qR
At2djp83E1+TgoE/Ldpm0/dal4JNJ92jQe9PG1LgXRUp30zyTSnIPPI6YS7J
t6bg04KD9oYk354CaNxMZu9hNVLR522X9Rk0n2Yqpg2o6utMWCcVj6J1XIPp
/8cZpGKvS9HtNDvKfyrKrluplhJvkop7rwaKGonnpCJU0PzVhbBFKjo1BO8r
I9wR3bghP/z/F/8P1gBpcw==
       "]],
      FontSize->16]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"cars bought \"", TraditionalForm], 
    FormBox["\"running mean value $ \"", TraditionalForm]},
  AxesOrigin->{0, 2505.},
  BaseStyle->{FontSize -> 16},
  DisplayFunction->Identity,
  Epilog->{
    Dashing[{Small, Small}], 
    RGBColor[0, 0, 1], 
    LineBox[{{0, 3000}, {1000, 3000}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{},
  PlotRange->{{0., 1000.}, {2500, 3500}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6302617453958845`*^9, 3.630261897021557*^9}, {
  3.6302622226751833`*^9, 3.6302622288495364`*^9}, {3.6302628190572944`*^9, 
  3.63026286374085*^9}, {3.638965660406204*^9, 3.6389656848966045`*^9}, {
  3.638965728886121*^9, 3.6389657676793394`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 1935, 51, 112, "Input"],
Cell[2517, 75, 13854, 241, 331, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
